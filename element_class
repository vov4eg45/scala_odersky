import Element.elem
abstract class Element {
  def contants: Array[String]
  def height:Int = contants.length
  def width:Int = if (height == 0) 0 else contants(0).length
  override def toString: String = contants.mkString("\n")
  def above(that: Element): Element =
    elem(this.contants ++ that.contants)
  def beside(that: Element): Element =
    elem(
      for ((line1, line2) <- this.contants.zip(that.contants))
        yield line1+line2
    )
  def widen(w: Int): Element =
    if (w <= width) this
    else {
      val left = elem(' ', (w-width)/2, height)
      val right = elem(' ', w - width - left.width, height)
      left beside this beside right
    }
  def heighten(h: Int): Element =
    if (h <= height) this
    else {
      val top = elem(' ', width, (h - height)/2)
      val bot = elem(' ', width, h - height - top.height)
      top above this above bot
    }
}
